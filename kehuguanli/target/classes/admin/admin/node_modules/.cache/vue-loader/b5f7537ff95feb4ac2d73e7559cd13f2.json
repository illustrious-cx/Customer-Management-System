{"remainingRequest":"F:\\Idea Projects\\kehuguanli\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Idea Projects\\kehuguanli\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\kehuFuwu\\add-or-update.vue?vue&type=template&id=5c73cfd5","dependencies":[{"path":"F:\\Idea Projects\\kehuguanli\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\kehuFuwu\\add-or-update.vue","mtime":1682492037827},{"path":"F:\\Idea Projects\\kehuguanli\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\Idea Projects\\kehuguanli\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\Idea Projects\\kehuguanli\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Idea Projects\\kehuguanli\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}